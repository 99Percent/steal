// _args = ['thing']; load('steal/generate/app')
if (!_args[0]) {
	print("Usage: steal/js steal/generate/app path");
	quit();
}

load('steal/rhino/loader.js')
rhinoLoader(function(){
	steal.plugins('steal/ejs','steal/file','steal/generate');
});




(function(){

	var steal = steal.File.cwd();
	var steal_folders = steal.split(/\/|\\/);
	
	var loc = _args[0]
	var loc_folders = loc.split(/\/|\\/);
	
	//for each .. in loc folders, replace with steal folder
	
	var i = 0;
	
	if (loc_folders[i] == "..") {
		while(loc_folders[i] == "..") {
			loc_folders[i] = steal_folders.pop();
			i++;
		}
	} else
	    for(i=0; i < loc_folders.length - 1; i++)
	    	loc_folders[i] = ".."
	
	loc_folders.pop();
	loc_folders.push('..')
	
	
	var	path_to_steal = loc_folders.join("/");

    //print(path_to_steal);
    //return;









	// if browser exists, returns the path, otherwise null
	var get_browser_location = function(browser_name){
		var runtime = java.lang.Runtime.getRuntime();
		var process = runtime.exec(["sh","-c","which "+browser_name]);
		var is = process.getInputStream();
		var isr = new java.io.InputStreamReader(is);
		var br = new java.io.BufferedReader(isr);
		var line=br.readLine();
		return line;
	}
    // am i non-windows?
    var windows = true;
    var firefox_location = "*firefox";
	if(java.lang.System.getProperty("os.name").indexOf("Windows") == -1){
		windows = false;
		// does current browser config have a path?
		var path = get_browser_location("firefox");
		if(path) firefox_location = "*firefox "+path;
	}

	

	var data = {
		path: _args[0], 
		application_name: _args[0].match(/[^\/]*$/)[0],
		current_path: steal.File.cwdURL(),
		windows: windows,
		firefox_location: firefox_location,
		path_to_steal : path_to_steal
	};
	
	var app_root = _args[0];
	Generator.createFolder(app_root);
	Generator.renderTo(app_root + "/"+data.application_name+".js", 						 "../generate/templates/application.ejs", data);
	Generator.renderTo(app_root + "/"+data.application_name+".html", 					"../generate/templates/page.ejs", data);
	
	Generator.createFolder(app_root+"/test");
	
	Generator.createFolder(app_root+"/test/qunit");
	Generator.renderTo(app_root + "/test/qunit/qunit.html", 						 "../generate/templates/qunit/html.ejs", data);
	Generator.renderTo(app_root + "/test/qunit/qunit.js",   						 "../generate/templates/qunit/qunit.ejs", data);
	Generator.renderTo(app_root + "/test/qunit/"+data.application_name+"_test.js",   "../generate/templates/qunit/test.ejs", data);
	Generator.renderTo(app_root + "/test/qunit/run.js",   					    	 "../generate/templates/qunit/run.ejs", data);
	
	
	
	
	Generator.createFolder(app_root+"/test/funcunit");
	Generator.renderTo(app_root + "/funcunit.html", 						 			 "../generate/templates/funcunit/html.ejs", data);
	Generator.renderTo(app_root + "/test/funcunit/funcunit.js",   						 "../generate/templates/funcunit/funcunit.ejs", data);
	Generator.renderTo(app_root + "/test/funcunit/"+data.application_name+"_test.js",    "../generate/templates/funcunit/test.ejs", data);
	
	Generator.renderTo(app_root + "/test/funcunit/run.js",    							 "../generate/templates/funcunit/run.ejs", data);
	
	Generator.createFolder(app_root+"/scripts");
	Generator.renderTo(app_root + "/scripts/compress.js", "../generate/templates/compress_script.ejs", data);
	
	Generator.renderTo(app_root + "/scripts/docs.js", "../generate/templates/docs_script.ejs", data);
    Generator.createFolder(app_root+"/docs");
	
	/*
	

	Generator.createFolder(app_root+"/docs");
	
	
	Generator.renderTo(app_root + "/"+data.application_name, "../generate/templates/application.ejs", data);
	
	Generator.renderTo(app_root + "/index.html", "../generate/templates/compress_page.ejs", data);
	Generator.createFolder(app_root+"/test");
	Generator.renderTo(app_root + "/test/unit.js", "../generate/templates/unit.ejs", data);
	Generator.renderTo(app_root + "/test/run_unit.js", "../generate/templates/unit_script.ejs", data);
	Generator.renderTo(app_root + "/test/functional.js", "../generate/templates/functional.ejs", data);
	Generator.renderTo(app_root + "/test/run_functional.js", "../generate/templates/run_functional.ejs", data);
	Generator.renderTo(app_root + "/test/selenium_config.js", "../generate/templates/selenium_config.ejs", data);
	Generator.createFolder(app_root+"/docs");
	Generator.renderTo("test/unit/truth_test.js", "../generate/templates/unit_test.ejs", {name: "Truth"});
	Generator.renderTo("test/functional/truth_functional_test.js", "../generate/templates/functional_test.ejs", {name: "Truth"});
	
	
	
	var dta = {
		path_to_steal: "steal/steal.js",
		application_name: _args[0]
	}
	
	//test/tests/engine.html -> ../../steal/steal.js
	
	Generator.renderTo(_args[0]+".html", "../generate/templates/page.ejs", dta);
	Generator.postGenerationMessage();
	
	//Generator.postGenerationMessage();
    */
})();

